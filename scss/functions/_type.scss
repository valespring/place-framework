// Type Functions
@function filter-type-declaration($value, $line-height: false) {
	$string-value: #{$value};
	$underscore-index: str-index($string-value, '_');

	@if $underscore-index {
		$start-index: 1;
		$sep-index: $underscore-index - 1;

		@if $line-height {
			$start-index: $underscore-index + 1;
			$sep-index: str-length($string-value);
		}

		$filtered-value: str-slice($string-value, $start-index, $sep-index);

		@return $filtered-value;
	} @else if ($line-height == false) {
		@return $value;
	} @else {
		@return false;
	}
}

@function get-type-size-by-key($key) {
	@return get-type-size($queried-value);
}

@function get-type-size($value) {
	@return filter-type-declaration($value);
}

@function get-line-height($value, $key) {
	// Combination in type scale declaration takes precedence
	$scale-line-height: filter-type-declaration($value, $line-height: true);
	$map-line-height: map-get($type-line-height, $key);

	@if $scale-line-height {
		@return $scale-line-height;
	} @else if $map-line-height {
		@return $map-line-height;
	} @else {
		@return false;
	}
}
