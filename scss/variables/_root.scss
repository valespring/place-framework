// Configuration
@use '~@place/core/config/vars' as *;
@use '~@place/core/config/viewport-base' as *;
@use '~@place/core/config/viewports' as *;
@use '~@place/core/config/typography' as *;
@use '~@place/core/config/colors' as *;
@use '~@place/core/functions/viewports' as *;
@use '~@place/core/mixins/viewports' as *;
@use '~@place/core/functions/typography' as typography-functions;

:root {
	// Base Variables
	--content-ratio: calc(var(--content-width) / var(--content-width-max));
	--content-width-px: calc(var(--content-width) * 1px);
	--golden-ratio: #{$golden-ratio};

	// Colors
	--primary-color: #{$primary-color};
	--secondary-color: #{$secondary-color};


	// Viewport Variables
	@each $key, $breakpoint-value in $responsive-breakpoints {
		$index: index($responsive-breakpoints, $key $breakpoint-value);
		$next-index: $index + 1;

		#{viewport-variable-min($key)}: viewport-value-min($breakpoint-value);

		@if $next-index <= length($responsive-breakpoints) {
			$neighboring-breakpoint-key: nth(map-keys($responsive-breakpoints), $next-index);
			$neighboring-breakpoint-value: nth(map-values($responsive-breakpoints), $next-index);

			@if $neighboring-breakpoint-key {
				#{viewport-variable-max($key)}: viewport-value-max($neighboring-breakpoint-value);
			}
		}
	}

	@each $key in map-keys($responsive-breakpoints) {
		@include viewport-by-key($key) {
			--content-width: #{map-get($responsive-breakpoints, $key)};
			--content-width-max: #{map-get($responsive-breakpoints, $key)};
			
			// Vertical Rhythm - calculated from base text configuration per viewport
			// Uses actual line-height from type scale (e.g., 16_30 = 30px rhythm converted to rem)
			$base-text-config: map-get($type-scale, $base-text-key);
			$base-line-height: typography-functions.get-line-height($base-text-config);
			@if $base-line-height and $base-line-height != false {
				--vertical-rhythm-defined: #{typography-functions.px-to-rem($base-line-height)}rem;
			}
			
			// Fallback: base text size * golden ratio, converted to rem
			--vertical-rhythm-fallback: #{typography-functions.px-to-rem(typography-functions.get-type-size($base-text-size) * $golden-ratio)}rem;
			
			--vertical-rhythm: var(--vertical-rhythm-defined, var(--vertical-rhythm-fallback));
		}
	}
}
